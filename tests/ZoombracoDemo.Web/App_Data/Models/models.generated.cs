//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.5.96
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "b2c9f1e101ffa6d2")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1051 with alias "iMeta"
	/// <summary>IMeta</summary>
	public partial interface IIMeta : IPublishedContent
	{
		/// <summary>Browser Description</summary>
		string BrowserDescription { get; }

		/// <summary>Browser Title</summary>
		string BrowserTitle { get; }

		/// <summary>Open Graph Image</summary>
		string OpenGraphImage { get; }

		/// <summary>Open Graph Title</summary>
		string OpenGraphTitle { get; }

		/// <summary>Open Graph Type</summary>
		nuPickers.Picker OpenGraphType { get; }
	}

	/// <summary>IMeta</summary>
	[PublishedContentModel("iMeta")]
	public partial class IMeta : PublishedContentModel, IIMeta
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "iMeta";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public IMeta(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<IMeta, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Browser Description: The page description search engine results. Optimum 150 - 160 characters.
		///</summary>
		[ImplementPropertyType("browserDescription")]
		public string BrowserDescription
		{
			get { return GetBrowserDescription(this); }
		}

		/// <summary>Static getter for Browser Description</summary>
		public static string GetBrowserDescription(IIMeta that) { return that.GetPropertyValue<string>("browserDescription"); }

		///<summary>
		/// Browser Title: The page title that will be displayed to search engines and in the browser tab. Falls back to the name of the page
		///</summary>
		[ImplementPropertyType("browserTitle")]
		public string BrowserTitle
		{
			get { return GetBrowserTitle(this); }
		}

		/// <summary>Static getter for Browser Title</summary>
		public static string GetBrowserTitle(IIMeta that) { return that.GetPropertyValue<string>("browserTitle"); }

		///<summary>
		/// Open Graph Image: The image that represents your document when shared in social media.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public string OpenGraphImage
		{
			get { return GetOpenGraphImage(this); }
		}

		/// <summary>Static getter for Open Graph Image</summary>
		public static string GetOpenGraphImage(IIMeta that) { return that.GetPropertyValue<string>("openGraphImage"); }

		///<summary>
		/// Open Graph Title: The title of the document as it should appear when shared in social media.
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return GetOpenGraphTitle(this); }
		}

		/// <summary>Static getter for Open Graph Title</summary>
		public static string GetOpenGraphTitle(IIMeta that) { return that.GetPropertyValue<string>("openGraphTitle"); }

		///<summary>
		/// Open Graph Type: The type of your document as it should appear when shared in social media.
		///</summary>
		[ImplementPropertyType("openGraphType")]
		public nuPickers.Picker OpenGraphType
		{
			get { return GetOpenGraphType(this); }
		}

		/// <summary>Static getter for Open Graph Type</summary>
		public static nuPickers.Picker GetOpenGraphType(IIMeta that) { return that.GetPropertyValue<nuPickers.Picker>("openGraphType"); }
	}

	// Mixin content Type 1056 with alias "iXmlSitemap"
	/// <summary>IXmlSitemap</summary>
	public partial interface IIXmlSitemap : IPublishedContent
	{
		/// <summary>Change Frequency</summary>
		nuPickers.Picker ChangeFrequency { get; }

		/// <summary>Exclude From Xml Sitemap</summary>
		bool ExcludeFromXmlSitemap { get; }

		/// <summary>Priority</summary>
		object Priority { get; }
	}

	/// <summary>IXmlSitemap</summary>
	[PublishedContentModel("iXmlSitemap")]
	public partial class IXmlSitemap : PublishedContentModel, IIXmlSitemap
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "iXmlSitemap";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public IXmlSitemap(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<IXmlSitemap, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Change Frequency: The frequency at which updates will be made to the page.
		///</summary>
		[ImplementPropertyType("changeFrequency")]
		public nuPickers.Picker ChangeFrequency
		{
			get { return GetChangeFrequency(this); }
		}

		/// <summary>Static getter for Change Frequency</summary>
		public static nuPickers.Picker GetChangeFrequency(IIXmlSitemap that) { return that.GetPropertyValue<nuPickers.Picker>("changeFrequency"); }

		///<summary>
		/// Exclude From Xml Sitemap: A value indicating whether the page should be excluded from xml sitemap.
		///</summary>
		[ImplementPropertyType("excludeFromXmlSitemap")]
		public bool ExcludeFromXmlSitemap
		{
			get { return GetExcludeFromXmlSitemap(this); }
		}

		/// <summary>Static getter for Exclude From Xml Sitemap</summary>
		public static bool GetExcludeFromXmlSitemap(IIXmlSitemap that) { return that.GetPropertyValue<bool>("excludeFromXmlSitemap"); }

		///<summary>
		/// Priority: The priority of this URL relative to other URLs on your site.
		///</summary>
		[ImplementPropertyType("priority")]
		public object Priority
		{
			get { return GetPriority(this); }
		}

		/// <summary>Static getter for Priority</summary>
		public static object GetPriority(IIXmlSitemap that) { return that.GetPropertyValue("priority"); }
	}

	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : PublishedContentModel, IIMeta, IIXmlSitemap
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Browser Description: The page description search engine results. Optimum 150 - 160 characters.
		///</summary>
		[ImplementPropertyType("browserDescription")]
		public string BrowserDescription
		{
			get { return IMeta.GetBrowserDescription(this); }
		}

		///<summary>
		/// Browser Title: The page title that will be displayed to search engines and in the browser tab. Falls back to the name of the page
		///</summary>
		[ImplementPropertyType("browserTitle")]
		public string BrowserTitle
		{
			get { return IMeta.GetBrowserTitle(this); }
		}

		///<summary>
		/// Open Graph Image: The image that represents your document when shared in social media.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public string OpenGraphImage
		{
			get { return IMeta.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph Title: The title of the document as it should appear when shared in social media.
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return IMeta.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Open Graph Type: The type of your document as it should appear when shared in social media.
		///</summary>
		[ImplementPropertyType("openGraphType")]
		public nuPickers.Picker OpenGraphType
		{
			get { return IMeta.GetOpenGraphType(this); }
		}

		///<summary>
		/// Change Frequency: The frequency at which updates will be made to the page.
		///</summary>
		[ImplementPropertyType("changeFrequency")]
		public nuPickers.Picker ChangeFrequency
		{
			get { return IXmlSitemap.GetChangeFrequency(this); }
		}

		///<summary>
		/// Exclude From Xml Sitemap: A value indicating whether the page should be excluded from xml sitemap.
		///</summary>
		[ImplementPropertyType("excludeFromXmlSitemap")]
		public bool ExcludeFromXmlSitemap
		{
			get { return IXmlSitemap.GetExcludeFromXmlSitemap(this); }
		}

		///<summary>
		/// Priority: The priority of this URL relative to other URLs on your site.
		///</summary>
		[ImplementPropertyType("priority")]
		public object Priority
		{
			get { return IXmlSitemap.GetPriority(this); }
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}
